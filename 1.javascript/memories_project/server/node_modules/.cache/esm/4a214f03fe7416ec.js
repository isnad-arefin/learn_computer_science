let express,bodyParser,mongoose,cors,postRoutes;_fe7‍.w("express",[["default",["express"],function(v){express=v}]]);_fe7‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_fe7‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_fe7‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_fe7‍.w("./routes/posts.js",[["default",["postRoutes"],function(v){postRoutes=v}]]);






const app = express();

app.use("/posts", postRoutes);

app.use(bodyParser.json({ limit: "30mb", extended: true }));
app.use(bodyParser.urlencoded({ limit: "30mb", extended: true }));
app.use(cors());

const CONNECTION_URL =
  "mongodb+srv://isnadarefin:isnadarefin123@cluster0.lhlqa.mongodb.net/myFirstDatabase?retryWrites=true&w=majority";
const PORT = process.env.PORT || 5000;

mongoose
  .connect(CONNECTION_URL, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
  })
  .then(() =>
    app.listen(PORT, () => console.log(`Server running on port: ${PORT}`))
  )
  .catch((error) => _fe7‍.g.console.log(error.message));

mongoose.set("useFindAndModify", false);
